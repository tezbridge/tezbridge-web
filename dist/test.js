parcelRequire=function(e,r,n,t){var i="function"==typeof parcelRequire&&parcelRequire,o="function"==typeof require&&require;function u(n,t){if(!r[n]){if(!e[n]){var f="function"==typeof parcelRequire&&parcelRequire;if(!t&&f)return f(n,!0);if(i)return i(n,!0);if(o&&"string"==typeof n)return o(n);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[n][1][r]||r},p.cache={};var l=r[n]=new u.Module(n);e[n][0].call(l.exports,p,l,l.exports,this)}return r[n].exports;function p(e){return u(p.resolve(e))}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=r,u.parent=i,u.register=function(r,n){e[r]=[function(e,r){r.exports=n},{}]};for(var f=0;f<n.length;f++)u(n[f]);if(n.length){var c=u(n[n.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=c:"function"==typeof define&&define.amd?define(function(){return c}):t&&(this[t]=c)}return u}({"Y/Oq":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RPCFn=exports.assert=void 0;var e=o(require("assert")),t=o(require("https")),r=o(require("url"));function o(e){return e&&e.__esModule?e:{default:e}}const s=(t,r)=>{e.default.ok(t,r),console.log("[32m%s[0m","PASS @",r)};exports.assert=s;const n=(e,o,s)=>new Promise((n,a)=>{const p=r.default.parse(e),u={hostname:p.hostname,port:p.port,path:p.path,method:s,headers:{"Content-Type":"application/json"}},l=t.default.request(u,e=>{let t="";e.on("data",e=>{t+=e.toString()}),e.on("end",()=>{try{n(JSON.parse(t))}catch(e){console.log("[31m%s[0m","RPC result JSON.parse error: ",t)}})});l.on("error",e=>{a(e)}),"POST"===s&&l.write(JSON.stringify(o)),l.end()});exports.RPCFn=n;
},{}],"Focm":[function(require,module,exports) {
"use strict";var e=a(require("tezbridge-crypto")),r=a(require("tezbridge-network")),t=require("./util");function a(e){return e&&e.__esModule?e:{default:e}}const i=new r.default({host:"https://testnet.tezbridge.com",RPCFn:t.RPCFn}),n=async()=>{{const r=await i.mixed.makeOriginationBytes({source:"tz1hgWvYdzLECdrq5zndGHwCGnUCJq1KFe3r",public_key:"edpkunm1aRnRtHwVsBGSFgKmw5EhBn4gR6NC5JqVoAi57viSgAN3t5"},{spendable:!1,delegatable:!1,script:{code:[{prim:"parameter",args:[{prim:"contract",args:[{prim:"unit"}],annots:[":X"]}]},{prim:"storage",args:[{prim:"unit"}]},{prim:"code",args:[[{prim:"CDR",annots:["@storage_slash_1"]},{prim:"NIL",args:[{prim:"operation"}]},{prim:"PAIR"}]]}],storage:{prim:"Pair",args:[[],{prim:"Unit"}]}}}),t=e.default.crypto.decryptKey("edesk1TgH1sGSQ2rwM1Sk475ikTLqeYrSH2a6tvUuZdzkox8C91n55pVGo7QpxbFhT1KAe3zpPFWPvrusrBY9fnc","a");r.signature=e.default.crypto.signOperation(r.operation_hex,t.getSecretKey());const a=await i.submit.preapply_operation(r.branch,r.contents,r.protocol,r.signature);console.log(a)}},o=async()=>{await n()};o();
},{"./util":"Y/Oq"}]},{},["Focm"], null)
//# sourceMappingURL=/test.map